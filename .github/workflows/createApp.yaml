name: Create Python Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: # only allow the minimum required access
  contents: read

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black

    - name: Lint with flake8
      run: |
        flake8

    - name: Check code formatting with Black
      run: |
        black --check .

  build-ubuntu:
    runs-on: ubuntu-latest
    needs: checks

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed ui.py

    - name: Archive executable
      uses: actions/upload-artifact@v4
      with:
        name: executable-ubuntu
        path: dist/
        overwrite: true

  build-windows:
    runs-on: windows-latest
    needs: checks

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed ui.py

    - name: Archive executable
      uses: actions/upload-artifact@v4
      with:
        name: executable-windows
        path: dist/
        overwrite: true

  build-macos:
    runs-on: macos-latest
    needs: checks

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed ui.py

    - name: Archive executable
      uses: actions/upload-artifact@v4
      with:
        name: executable-macos
        path: dist/
        overwrite: true